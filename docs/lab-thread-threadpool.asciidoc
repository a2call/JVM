OBJECTIVE
---------
* Illustrating Thread in `waiting on condition` status
* Analysing java thread dump while threads were managed by threadpool.


PREREQUISITE
-------------

* Maven 3.0 or latter.
* Eclipse
* threadDump analysing tools


DESCRIPTION
-----------

Java Thread in waiting on condition means: either Waiting until it reaches condition, or Thread.sleep() is called.

We will start 3 threads lab-thread-threadpool-1, lab-thread-threadpool-2 and lab-thread-threadpool-3, these 3 threads are managed by threadpool, threads in pool can run again if it reaches condition, we will show Waiting until it reaches condition cause thread in `waiting on condition` status in this session.

link:lab-thread-sleeping.asciidoc[Thread.sleep() is called cause thread in `waiting on condition` status]

Lab Source Code: .../jvm/thread/threadpool

LAB STEPS
---------

I - Build and generate executable jar
+++++++++++++++++++++++++++++++++++++

----
mvn clean install
----

thread-threadpool.jar will be generated

II - Show Java Threads in `waiting on condition` status
+++++++++++++++++++++++++++++++++++++++++++++++++++++++

----
java -jar thread-threadpool.jar
----

We will find that after all 3 threads lab-thread-threadpool-1, lab-thread-threadpool-2, lab-thread-threadpool-3 finish it's own business logic, it came to threadpool, Waiting until it reaches condition.

III - Generate thread dump
++++++++++++++++++++++++++

----
jstack -l <PID> > threadpool.out
----

ANALYSING
---------

* All 3 threads lab-thread-threadpool-1, lab-thread-threadpool-2, lab-thread-threadpool-3 are in `waiting on condition` status

----
"lab-thread-threadpool-2" prio=10 tid=0xb6aeec00 nid=0x507d waiting on condition [0x6e4db000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x9e42fea0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:315)
	at com.kylin.lab.threaddump.threadpool.SleepingThread.run(SleepingThread.java:34)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)

   Locked ownable synchronizers:
	- <0x9e433910> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)

"lab-thread-threadpool-1" prio=10 tid=0xb6aed400 nid=0x507c waiting on condition [0x6e52c000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x9e42fea0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:315)
	at com.kylin.lab.threaddump.threadpool.SleepingThread.run(SleepingThread.java:34)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)

   Locked ownable synchronizers:
	- <0x9e433658> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)

"lab-thread-threadpool-0" prio=10 tid=0xb6aec000 nid=0x507b waiting on condition [0x6e57d000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x9e42fea0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:156)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1987)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:315)
	at com.kylin.lab.threaddump.threadpool.SleepingThread.run(SleepingThread.java:34)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)

   Locked ownable synchronizers:
	- <0x9e4333a0> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
----

* Full Thread dump view

link:threadpool.out[threadpool thread dump file]



